//https://callstack.github.io/react-native-paper/docs/guides/theming/#creating-dynamic-theme-colors
export const themeLight = {
    colors: {
      primary: "rgb(0, 95, 175)",
      onPrimary: "rgb(255, 255, 255)",
      primaryContainer: "rgb(212, 227, 255)",
      onPrimaryContainer: "rgb(0, 28, 58)",
      secondary: "rgb(0, 107, 94)",
      onSecondary: "rgb(255, 255, 255)",
      secondaryContainer: "rgb(118, 248, 226)",
      onSecondaryContainer: "rgb(0, 32, 27)",
      tertiary: "rgb(95, 98, 0)",
      onTertiary: "rgb(255, 255, 255)",
      tertiaryContainer: "rgb(229, 234, 93)",
      onTertiaryContainer: "rgb(28, 29, 0)",
      error: "rgb(186, 26, 26)",
      onError: "rgb(255, 255, 255)",
      errorContainer: "rgb(255, 218, 214)",
      onErrorContainer: "rgb(65, 0, 2)",
      background: "rgb(253, 252, 255)",
      onBackground: "rgb(26, 28, 30)",
      surface: "rgb(253, 252, 255)",
      onSurface: "rgb(26, 28, 30)",
      surfaceVariant: "rgb(224, 226, 236)",
      onSurfaceVariant: "rgb(67, 71, 78)",
      outline: "rgb(116, 119, 127)",
      outlineVariant: "rgb(195, 198, 207)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(47, 48, 51)",
      inverseOnSurface: "rgb(241, 240, 244)",
      inversePrimary: "rgb(165, 200, 255)",
      elevation: {
        level0: "transparent",
        level1: "rgb(240, 244, 251)",
        level2: "rgb(233, 239, 249)",
        level3: "rgb(225, 235, 246)",
        level4: "rgb(223, 233, 245)",
        level5: "rgb(218, 230, 244)",
      },
      surfaceDisabled: "rgba(26, 28, 30, 0.12)",
      onSurfaceDisabled: "rgba(26, 28, 30, 0.38)",
      backdrop: "rgba(45, 49, 56, 0.4)",
    },
  };

  export const themeDark = {
    
        "colors": {
          primary: "rgb(255, 179, 172)",
          onPrimary: "rgb(104, 0, 8)",
          primaryContainer: "rgb(147, 0, 16)",
          onPrimaryContainer: "rgb(255, 218, 214)",
          secondary: "rgb(255, 181, 158)",
          onSecondary: "rgb(93, 24, 0)",
          secondaryContainer: "rgb(124, 45, 18)",
          onSecondaryContainer: "rgb(255, 219, 208)",
          tertiary: "rgb(99, 211, 255)",
          onTertiary: "rgb(0, 53, 69)",
          tertiaryContainer: "rgb(0, 77, 99)",
          onTertiaryContainer: "rgb(188, 233, 255)",
          error: "rgb(255, 180, 171)",
          onError: "rgb(105, 0, 5)",
          errorContainer: "rgb(147, 0, 10)",
          onErrorContainer: "rgb(255, 180, 171)",
          background: "rgb(32, 26, 25)",
          onBackground: "rgb(237, 224, 222)",
          surface: "rgb(32, 26, 25)",
          onSurface: "rgb(237, 224, 222)",
          surfaceVariant: "rgb(83, 67, 66)",
          onSurfaceVariant: "rgb(216, 194, 191)",
          outline: "rgb(160, 140, 138)",
          outlineVariant: "rgb(83, 67, 66)",
          shadow: "rgb(0, 0, 0)",
          scrim: "rgb(0, 0, 0)",
          inverseSurface: "rgb(237, 224, 222)",
          inverseOnSurface: "rgb(54, 47, 46)",
          inversePrimary: "rgb(186, 26, 32)",
          elevation: {
            level0: "transparent",
            level1: "rgb(43, 34, 32)",
            level2: "rgb(50, 38, 37)",
            level3: "rgb(57, 43, 41)",
            level4: "rgb(59, 44, 43)",
            level5: "rgb(63, 47, 46)"
          },
          surfaceDisabled: "rgba(237, 224, 222, 0.12)",
          onSurfaceDisabled: "rgba(237, 224, 222, 0.38)",
          backdrop: "rgba(59, 45, 44, 0.4)"
        }
      
  };